{"ast":null,"code":"var _jsxFileName = \"/Users/akanksha/Documents/WebDevelopment/student-singhakan2635/project/netweb/src/Components/DisplayMovies.jsx\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport MovieDetails from './MovieDetail';\nimport { useState, useContext } from 'react';\nimport { ContentState, WistlistState } from '../js/context';\nimport TvSeriesDetails from './TvSeriesDetails';\nimport notAvailable from '../images/notFound.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayMovies = ({\n  movies,\n  mediaType\n}) => {\n  _s();\n\n  const [state, setState] = useState({\n    showDetails: false,\n    id: '',\n    media: ''\n  });\n  const [contentState, setContentState] = useContext(ContentState);\n  const [newwishlist, setnewwishlist] = useContext(WistlistState);\n\n  const getDetails = (id, media) => {\n    setContentState({});\n    setnewwishlist('');\n    let checkMedia;\n\n    if (!mediaType) {\n      checkMedia = media;\n    } else {\n      checkMedia = mediaType;\n    }\n\n    setState({\n      showDetails: true,\n      id: id,\n      media: checkMedia\n    });\n    setContentState({ ...contentState,\n      id: id\n    });\n  };\n\n  const modifyDetails = () => {\n    setState({\n      showDetails: false,\n      id: ''\n    });\n    setContentState({});\n  };\n\n  const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n  let title;\n  const movieList = movies.map(movie => {\n    if (mediaType === \"tv\" || movie.media_type === \"tv\") {\n      title = movie.original_name;\n    } else {\n      title = movie.title;\n    }\n\n    let images;\n\n    if (movie.poster_path) {\n      images = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgUrl + movie.poster_path,\n        alt: title,\n        className: \"poster-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 22\n      }, this);\n    } else {\n      images = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: notAvailable,\n        alt: notAvailable,\n        className: \"poster-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 22\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-item\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-display\",\n        children: [images, /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"movie-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"rating\",\n          children: [\"Rating : \", movie.vote_average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getDetails(movie.id, movie.media_type),\n          className: \"details-button\",\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  });\n  let content;\n\n  if (state.id && state.media === \"movie\") {\n    content = /*#__PURE__*/_jsxDEV(MovieDetails, {\n      id: state.id,\n      modifyDetails: modifyDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this);\n  } else if (state.id && state.media === \"tv\") {\n    content = /*#__PURE__*/_jsxDEV(TvSeriesDetails, {\n      id: state.id,\n      modifyDetails: modifyDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"top-list-item\",\n      children: movieList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"listing-container\",\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DisplayMovies, \"xI7cqkc0Vt3ws7c8XiRYhrFIU5g=\");\n\n_c = DisplayMovies;\nexport default DisplayMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayMovies\");","map":{"version":3,"sources":["/Users/akanksha/Documents/WebDevelopment/student-singhakan2635/project/netweb/src/Components/DisplayMovies.jsx"],"names":["MovieDetails","useState","useContext","ContentState","WistlistState","TvSeriesDetails","notAvailable","DisplayMovies","movies","mediaType","state","setState","showDetails","id","media","contentState","setContentState","newwishlist","setnewwishlist","getDetails","checkMedia","modifyDetails","imgUrl","title","movieList","map","movie","media_type","original_name","images","poster_path","vote_average","content"],"mappings":"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","sourcesContent":["import '../App.css';\nimport MovieDetails from './MovieDetail';\nimport { useState, useContext } from 'react';\nimport { ContentState, WistlistState } from '../js/context';\nimport TvSeriesDetails from './TvSeriesDetails';\nimport notAvailable from '../images/notFound.png';\n\n\nconst DisplayMovies = ({ movies, mediaType }) => {\n    const [state, setState] = useState({ showDetails: false, id: '', media: '' });\n    const [contentState, setContentState] = useContext(ContentState);\n    const [newwishlist, setnewwishlist] = useContext(WistlistState);\n\n    const getDetails = (id, media) => {\n        setContentState({});\n        setnewwishlist('');\n        let checkMedia;\n        if (!mediaType) {\n            checkMedia = media;\n        }\n        else {\n            checkMedia = mediaType;\n        }\n        setState({ showDetails: true, id: id, media: checkMedia });\n        setContentState({ ...contentState, id: id });\n    }\n\n    const modifyDetails = () => {\n        setState({ showDetails: false, id: '' });\n        setContentState({});\n    }\n\n    const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n\n    let title;\n\n    const movieList = movies.map((movie) => {\n\n        if (mediaType === \"tv\" || movie.media_type === \"tv\") {\n            title = movie.original_name;\n        }\n        else {\n            title = movie.title;\n        }\n        let images;\n        if (movie.poster_path) {\n            images = <img src={imgUrl + movie.poster_path} alt={title} className=\"poster-img\" />\n        }\n        else {\n            images = <img src={notAvailable} alt={notAvailable} className=\"poster-img\" />\n        }\n        return (\n            <li key={movie.id} className=\"list-item\">\n                <div className=\"item-display\">\n                    {images}\n                    <p className=\"movie-title\">{title}</p>\n                    <p className=\"rating\">Rating : {movie.vote_average}</p>\n                    <button onClick={() => getDetails(movie.id, movie.media_type)} className=\"details-button\">Details</button>\n\n                </div>\n            </li>\n        )\n    });\n    let content;\n    if (state.id && state.media === \"movie\") {\n        content = <MovieDetails id={state.id} modifyDetails={modifyDetails} />;\n    }\n    else if (state.id && state.media === \"tv\") {\n        content = <TvSeriesDetails id={state.id} modifyDetails={modifyDetails} />\n    }\n    else {\n        content =\n            <ul className=\"top-list-item\">\n                {movieList}\n            </ul>\n    }\n\n    return (\n        <div className=\"listing-container\">\n            {content}\n        </div>\n\n    )\n};\n\nexport default DisplayMovies;"]},"metadata":{},"sourceType":"module"}