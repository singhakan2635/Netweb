{"ast":null,"code":"var _jsxFileName = \"/Users/akanksha/Documents/WebDevelopment/student-singhakan2635/project/netweb/src/Components/DisplayWishList.jsx\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport MovieDetails from './MovieDetail';\nimport { useState, useContext } from 'react';\nimport { ContentState } from '../js/context';\nimport TvSeriesDetails from './TvSeriesDetails';\nimport RemoveFromWishlist from './RemoveFromWishlist';\nimport notAvailable from '../images/notFound.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayWishlist = ({\n  movies,\n  mediaType,\n  loaddata\n}) => {\n  _s();\n\n  const [state, setState] = useState({\n    showDetails: false,\n    id: '',\n    media: ''\n  });\n  const [contentState, setContentState] = useContext(ContentState);\n\n  const getDetails = (id, media) => {\n    setContentState({});\n    setState({});\n    let checkMedia;\n\n    if (!mediaType) {\n      checkMedia = media;\n    } else {\n      checkMedia = mediaType;\n    }\n\n    setState({\n      showDetails: true,\n      id: id,\n      media: checkMedia\n    });\n    setContentState({ ...contentState,\n      id: id\n    });\n  };\n\n  const modifyDetails = () => {\n    setState({\n      showDetails: false,\n      id: ''\n    });\n    setContentState({});\n  };\n\n  const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n  let title;\n  const movieList = movies.map(movie => {\n    if (mediaType === \"tv\" || movie.media_type === \"tv\") {\n      title = movie.original_name;\n    } else {\n      title = movie.title;\n    }\n\n    let images;\n\n    if (movie.poster_path) {\n      images = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgUrl + movie.poster_path,\n        alt: title,\n        className: \"poster-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 22\n      }, this);\n    } else {\n      images = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: notAvailable,\n        alt: notAvailable,\n        className: \"poster-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-item\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-display\",\n        children: [images, /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"movie-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getDetails(movie.id, movie.media_type),\n          className: \"details-button\",\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RemoveFromWishlist, {\n          id: movie.id,\n          media: mediaType,\n          loaddata: loaddata\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  });\n  let content;\n\n  if (state.id && state.media === \"movie\") {\n    content = /*#__PURE__*/_jsxDEV(MovieDetails, {\n      id: state.id,\n      modifyDetails: modifyDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }, this);\n  } else if (state.id && state.media === \"tv\") {\n    content = /*#__PURE__*/_jsxDEV(TvSeriesDetails, {\n      id: state.id,\n      modifyDetails: modifyDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"top-list-item\",\n      children: movieList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"listing-container\",\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DisplayWishlist, \"y0jcKcJs0PoGRcD0ql+isUltG3E=\");\n\n_c = DisplayWishlist;\nexport default DisplayWishlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayWishlist\");","map":{"version":3,"sources":["/Users/akanksha/Documents/WebDevelopment/student-singhakan2635/project/netweb/src/Components/DisplayWishList.jsx"],"names":["MovieDetails","useState","useContext","ContentState","TvSeriesDetails","RemoveFromWishlist","notAvailable","DisplayWishlist","movies","mediaType","loaddata","state","setState","showDetails","id","media","contentState","setContentState","getDetails","checkMedia","modifyDetails","imgUrl","title","movieList","map","movie","media_type","original_name","images","poster_path","content"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,YAAP,MAAyB,eAAzB;AACA,SAASC,QAAT,EAAkBC,UAAlB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA4B,eAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;;AAIA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAD,KACxB;AAAA;;AACI,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC;AAACY,IAAAA,WAAW,EAAC,KAAb;AAAoBC,IAAAA,EAAE,EAAC,EAAvB;AAA2BC,IAAAA,KAAK,EAAC;AAAjC,GAAD,CAAlC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,UAAU,CAACC,YAAD,CAAlD;;AAEA,QAAMe,UAAU,GAAG,CAACJ,EAAD,EAAIC,KAAJ,KACnB;AACIE,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAL,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,QAAIO,UAAJ;;AACA,QAAG,CAACV,SAAJ,EACA;AACIU,MAAAA,UAAU,GAACJ,KAAX;AACH,KAHD,MAII;AACAI,MAAAA,UAAU,GAACV,SAAX;AACH;;AACDG,IAAAA,QAAQ,CAAC;AAACC,MAAAA,WAAW,EAAC,IAAb;AAAmBC,MAAAA,EAAE,EAACA,EAAtB;AAA0BC,MAAAA,KAAK,EAACI;AAAhC,KAAD,CAAR;AACAF,IAAAA,eAAe,CAAC,EAAC,GAAGD,YAAJ;AAAkBF,MAAAA,EAAE,EAACA;AAArB,KAAD,CAAf;AACH,GAdD;;AAgBA,QAAMM,aAAa,GAAE,MACrB;AACIR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,WAAW,EAAC,KAAb;AAAoBC,MAAAA,EAAE,EAAC;AAAvB,KAAD,CAAR;AACAG,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH,GAJD;;AAOA,QAAMI,MAAM,GAAG,iCAAf;AAEA,MAAIC,KAAJ;AAEA,QAAMC,SAAS,GAAGf,MAAM,CAACgB,GAAP,CAAaC,KAAD,IAC9B;AAEI,QAAGhB,SAAS,KAAG,IAAZ,IAAoBgB,KAAK,CAACC,UAAN,KAAmB,IAA1C,EACA;AACIJ,MAAAA,KAAK,GAACG,KAAK,CAACE,aAAZ;AACH,KAHD,MAKA;AACIL,MAAAA,KAAK,GAACG,KAAK,CAACH,KAAZ;AACH;;AACD,QAAIM,MAAJ;;AACA,QAAIH,KAAK,CAACI,WAAV,EAAuB;AACnBD,MAAAA,MAAM,gBAAG;AAAK,QAAA,GAAG,EAAEP,MAAM,GAAGI,KAAK,CAACI,WAAzB;AAAsC,QAAA,GAAG,EAAEP,KAA3C;AAAkD,QAAA,SAAS,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,cAAT;AACH,KAFD,MAGK;AACDM,MAAAA,MAAM,gBAAG;AAAK,QAAA,GAAG,EAAEtB,YAAV;AAAwB,QAAA,GAAG,EAAEA,YAA7B;AAA2C,QAAA,SAAS,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,cAAT;AACH;;AAED,wBACI;AAAmB,MAAA,SAAS,EAAC,WAA7B;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,mBACKsB,MADL,eAEI;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,oBAA4BN;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,OAAO,EAAE,MAAMJ,UAAU,CAACO,KAAK,CAACX,EAAP,EAAWW,KAAK,CAACC,UAAjB,CAAjC;AAAgE,UAAA,SAAS,EAAC,gBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,kBAAD;AAAoB,UAAA,EAAE,EAAED,KAAK,CAACX,EAA9B;AAAkC,UAAA,KAAK,EAAEL,SAAzC;AAAoD,UAAA,QAAQ,EAAEC;AAA9D;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,OAASe,KAAK,CAACX,EAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GA7BiB,CAAlB;AA8BA,MAAIgB,OAAJ;;AACA,MAAGnB,KAAK,CAACG,EAAN,IAAYH,KAAK,CAACI,KAAN,KAAc,OAA7B,EACA;AACIe,IAAAA,OAAO,gBAAG,QAAC,YAAD;AAAc,MAAA,EAAE,EAAEnB,KAAK,CAACG,EAAxB;AAA4B,MAAA,aAAa,EAAEM;AAA3C;AAAA;AAAA;AAAA;AAAA,YAAV;AACH,GAHD,MAIK,IAAGT,KAAK,CAACG,EAAN,IAAYH,KAAK,CAACI,KAAN,KAAc,IAA7B,EACL;AACIe,IAAAA,OAAO,gBAAG,QAAC,eAAD;AAAiB,MAAA,EAAE,EAAEnB,KAAK,CAACG,EAA3B;AAA+B,MAAA,aAAa,EAAEM;AAA9C;AAAA;AAAA;AAAA;AAAA,YAAV;AACH,GAHI,MAKL;AACIU,IAAAA,OAAO,gBACK;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA,gBACMP;AADN;AAAA;AAAA;AAAA;AAAA,YADZ;AAIH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,cACKO;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CArFD;;GAAMvB,e;;KAAAA,e;AAuFN,eAAeA,eAAf","sourcesContent":["import '../App.css';\nimport MovieDetails from './MovieDetail';\nimport { useState,useContext } from 'react';\nimport { ContentState} from '../js/context';\nimport TvSeriesDetails from './TvSeriesDetails';\nimport RemoveFromWishlist from './RemoveFromWishlist';\nimport notAvailable from '../images/notFound.png';\n\n\n\nconst DisplayWishlist = ({movies, mediaType, loaddata}) => \n{\n    const [state, setState] = useState({showDetails:false, id:'', media:''});\n    const [contentState, setContentState] = useContext(ContentState);\n\n    const getDetails = (id,media) =>\n    {\n        setContentState({});\n        setState({});\n        let checkMedia;\n        if(!mediaType)\n        {\n            checkMedia=media;\n        }\n        else{\n            checkMedia=mediaType;\n        }\n        setState({showDetails:true, id:id, media:checkMedia});\n        setContentState({...contentState, id:id});\n    }\n\n    const modifyDetails =() =>\n    {\n        setState({showDetails:false, id:''});\n        setContentState({});\n    }\n    \n    \n    const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n\n    let title;\n\n    const movieList = movies.map( (movie) => \n    {\n       \n        if(mediaType===\"tv\" || movie.media_type===\"tv\")\n        {\n            title=movie.original_name;\n        }\n        else\n        {\n            title=movie.title;\n        }\n        let images;\n        if (movie.poster_path) {\n            images = <img src={imgUrl + movie.poster_path} alt={title} className=\"poster-img\" />\n        }\n        else {\n            images = <img src={notAvailable} alt={notAvailable} className=\"poster-img\" />\n        }\n        \n        return (\n            <li key={movie.id} className=\"list-item\">\n                <div className=\"item-display\">\n                    {images}\n                    <p className=\"movie-title\">{title}</p>\n                    <button onClick={() => getDetails(movie.id, movie.media_type) } className=\"details-button\">Details</button>\n                    <RemoveFromWishlist id={movie.id} media={mediaType} loaddata={loaddata} />\n                </div>\n            </li>\n        )\n    });\n    let content;\n    if(state.id && state.media===\"movie\")\n    {\n        content = <MovieDetails id={state.id} modifyDetails={modifyDetails} /> ;\n    }\n    else if(state.id && state.media===\"tv\")\n    {\n        content = <TvSeriesDetails id={state.id} modifyDetails={modifyDetails}/>\n    }\n    else\n    {\n        content = \n                    <ul className=\"top-list-item\">\n                         {movieList}\n                    </ul>\n    }\n    \n    return (\n        <div className=\"listing-container\">\n            {content}\n        </div>\n        \n    )\n};\n\nexport default DisplayWishlist;"]},"metadata":{},"sourceType":"module"}