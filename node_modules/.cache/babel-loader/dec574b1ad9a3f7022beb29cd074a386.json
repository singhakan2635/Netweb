{"ast":null,"code":"var _jsxFileName = \"/Users/akanksha/Documents/WebDevelopment/student-singhakan2635/project/netweb/src/Components/MovieDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport { fetchMovieDetail } from '../js/movieDbServices';\nimport { useEffect, useState, useContext } from 'react';\nimport { ErrorContext, ContentState } from '../js/context';\nimport errors from '../js/errors';\nimport { genres } from '../js/genres';\nimport DisplayDetails from './DisplayDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDetail = ({\n  modifyDetails\n}) => {\n  _s();\n\n  const [details, setDetails] = useState('');\n  const [contentState, setContentState] = useContext(ContentState);\n  const [setError] = useContext(ErrorContext);\n  useEffect(() => {\n    window.scroll(0, 0);\n    setContentState({});\n    fetchMovieDetail(contentState.id).then(json => {\n      setDetails({\n        Title: json.title,\n        Year: json.release_date,\n        Tagline: json.tagline,\n        id: json.id,\n        overview: json.overview,\n        PosterUrl: json.poster_path,\n        Genres: genres(json.genres)\n      });\n    }).catch(err => {\n      setError(errors[err.error || err || \"DEFAULT\"]);\n    });\n  }, [contentState.id]);\n  return /*#__PURE__*/_jsxDEV(DisplayDetails, {\n    details: details,\n    modifyDetails: modifyDetails,\n    media: \"movies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieDetail, \"g8xwnbgWAOmaYaQ+UalO9t5NCeI=\");\n\n_c = MovieDetail;\nexport default MovieDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"sources":["/Users/akanksha/Documents/WebDevelopment/student-singhakan2635/project/netweb/src/Components/MovieDetail.jsx"],"names":["fetchMovieDetail","useEffect","useState","useContext","ErrorContext","ContentState","errors","genres","DisplayDetails","MovieDetail","modifyDetails","details","setDetails","contentState","setContentState","setError","window","scroll","id","then","json","Title","title","Year","release_date","Tagline","tagline","overview","PosterUrl","poster_path","Genres","catch","err","error"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,uBAAjC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,eAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAAA;;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCX,UAAU,CAACE,YAAD,CAAlD;AACA,QAAM,CAACU,QAAD,IAAaZ,UAAU,CAACC,YAAD,CAA7B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiB,CAAjB;AACAH,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAd,IAAAA,gBAAgB,CAACa,YAAY,CAACK,EAAd,CAAhB,CACKC,IADL,CACWC,IAAD,IACN;AACIR,MAAAA,UAAU,CAAC;AACPS,QAAAA,KAAK,EAAED,IAAI,CAACE,KADL;AAEPC,QAAAA,IAAI,EAAEH,IAAI,CAACI,YAFJ;AAGPC,QAAAA,OAAO,EAAEL,IAAI,CAACM,OAHP;AAIPR,QAAAA,EAAE,EAAEE,IAAI,CAACF,EAJF;AAKPS,QAAAA,QAAQ,EAAEP,IAAI,CAACO,QALR;AAMPC,QAAAA,SAAS,EAAER,IAAI,CAACS,WANT;AAOPC,QAAAA,MAAM,EAAGvB,MAAM,CAACa,IAAI,CAACb,MAAN;AAPR,OAAD,CAAV;AAUH,KAbL,EAcKwB,KAdL,CAcYC,GAAD,IAAS;AACZjB,MAAAA,QAAQ,CAACT,MAAM,CAAC0B,GAAG,CAACC,KAAJ,IAAaD,GAAb,IAAoB,SAArB,CAAP,CAAR;AACH,KAhBL;AAkBH,GArBQ,EAqBN,CAACnB,YAAY,CAACK,EAAd,CArBM,CAAT;AAuBA,sBAEI,QAAC,cAAD;AAAgB,IAAA,OAAO,EAAEP,OAAzB;AAAkC,IAAA,aAAa,EAAED,aAAjD;AAAgE,IAAA,KAAK,EAAE;AAAvE;AAAA;AAAA;AAAA;AAAA,UAFJ;AAIH,CAhCD;;GAAMD,W;;KAAAA,W;AAkCN,eAAeA,WAAf","sourcesContent":["import { fetchMovieDetail } from '../js/movieDbServices';\nimport { useEffect, useState, useContext } from 'react';\nimport { ErrorContext, ContentState } from '../js/context';\nimport errors from '../js/errors';\nimport {genres} from '../js/genres';\nimport DisplayDetails from './DisplayDetails';\n\nconst MovieDetail = ({ modifyDetails }) => {\n    const [details, setDetails] = useState('');\n    const [contentState, setContentState] = useContext(ContentState);\n    const [setError] = useContext(ErrorContext);\n\n    useEffect(() => {\n        window.scroll(0, 0);\n        setContentState({});\n        fetchMovieDetail(contentState.id)\n            .then((json) => \n            {\n                setDetails({\n                    Title: json.title,\n                    Year: json.release_date,\n                    Tagline: json.tagline,\n                    id: json.id,\n                    overview: json.overview,\n                    PosterUrl: json.poster_path,\n                    Genres : genres(json.genres),\n                });\n                \n            })\n            .catch((err) => {\n                setError(errors[err.error || err || \"DEFAULT\"]);\n            })\n\n    }, [contentState.id]);\n\n    return (\n        \n        <DisplayDetails details={details} modifyDetails={modifyDetails} media={\"movies\"} />\n    );\n};\n\nexport default MovieDetail;"]},"metadata":{},"sourceType":"module"}