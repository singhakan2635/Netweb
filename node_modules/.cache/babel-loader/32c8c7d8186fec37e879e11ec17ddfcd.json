{"ast":null,"code":"var _jsxFileName = \"/Users/akanksha/Documents/WebDevelopment/student-singhakan2635/project/netweb/src/Components/ShowWishlist.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { abilityToGetWhishList } from '../js/services';\nimport { ContentState, ErrorContext } from \"../js/context\";\nimport { fetchMovieDetail, fetchTvSeriesDetail } from '../js/movieDbServices';\nimport errors from '../js/errors';\nimport DisplayWishlist from \"./DisplayWishList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowWishlist = ({\n  display,\n  loaddata\n}) => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [setError] = useContext(ErrorContext);\n  const [movies, setMovies] = useState([]);\n  const [tvseries, setTvseries] = useState([]);\n  const [noContent, setNoCOntent] = useState([]);\n  const [contentState, setContentState] = useContext(ContentState);\n  const [state, setState] = useState('');\n  useEffect(() => {\n    setList([]);\n\n    if (contentState.remove) {\n      setMovies([]);\n      setTvseries([]);\n    }\n\n    abilityToGetWhishList().then(data => {\n      if (data.movies.length === 0 && data.shows.length === 0) {\n        setNoCOntent(\"No data\");\n      } else {\n        setList({\n          movies: data.movies,\n          shows: data.shows\n        });\n        createMovielist();\n        createShowsList();\n        setNoCOntent('');\n      }\n    }).catch(err => {\n      setError(errors[err.error || err || \"DEFAULT\"]);\n    });\n  }, [contentState.id, display]);\n\n  const getMovieItems = id => {\n    fetchMovieDetail(id).then(data => {\n      setMovies(movies => [...movies, data]);\n    });\n  };\n\n  const getTvList = id => {\n    fetchTvSeriesDetail(id).then(data => {\n      setTvseries(tvseries => [...tvseries, data]);\n    });\n  };\n\n  const createMovielist = () => {\n    list.movies.map(id => {\n      getMovieItems(id);\n    });\n  };\n\n  const createShowsList = () => {\n    list.shows.map(id => {\n      getTvList(id);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [noContent && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No item added in the wishlist!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(DisplayWishlist, {\n      movies: movies,\n      mediaType: \"movie\",\n      loaddata: loaddata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DisplayWishlist, {\n      movies: tvseries,\n      mediaType: \"tv\",\n      loaddata: loaddata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShowWishlist, \"iPNvgegJsiRDGON5Ps4DTZLyvzM=\");\n\n_c = ShowWishlist;\nexport default ShowWishlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowWishlist\");","map":{"version":3,"sources":["/Users/akanksha/Documents/WebDevelopment/student-singhakan2635/project/netweb/src/Components/ShowWishlist.jsx"],"names":["useContext","useEffect","useState","abilityToGetWhishList","ContentState","ErrorContext","fetchMovieDetail","fetchTvSeriesDetail","errors","DisplayWishlist","ShowWishlist","display","loaddata","list","setList","setError","movies","setMovies","tvseries","setTvseries","noContent","setNoCOntent","contentState","setContentState","state","setState","remove","then","data","length","shows","createMovielist","createShowsList","catch","err","error","id","getMovieItems","getTvList","map"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport {abilityToGetWhishList} from '../js/services';\nimport { ContentState, ErrorContext } from \"../js/context\";\nimport {fetchMovieDetail, fetchTvSeriesDetail} from '../js/movieDbServices';\nimport errors from '../js/errors';\nimport DisplayWishlist from \"./DisplayWishList\";\n\nconst ShowWishlist = ({display,loaddata}) => \n{\n    const [list, setList] = useState([]);\n    const [setError] = useContext(ErrorContext);\n    const [movies, setMovies] = useState([]);\n    const [tvseries, setTvseries] = useState([]);\n    const [noContent, setNoCOntent] = useState([]);\n    const [contentState, setContentState] = useContext(ContentState);\n    const [state, setState] = useState('');\n\n    useEffect(() => \n    {\n        setList([]);\n        if(contentState.remove)\n        {\n            setMovies([]);\n            setTvseries([]);\n        }\n        abilityToGetWhishList()\n        .then((data) => \n        {\n            if(data.movies.length===0 && data.shows.length===0)\n            {\n                setNoCOntent(\"No data\");\n            }\n            else\n            {\n                setList({movies:data.movies, shows:data.shows});\n                createMovielist();\n                createShowsList();\n                setNoCOntent('');\n            }\n            \n        })\n        .catch(err =>\n            {\n                setError(errors[err.error || err || \"DEFAULT\"]);\n            })\n    },[contentState.id,display]);\n\n    const getMovieItems = (id) => \n    {\n        fetchMovieDetail(id)\n        .then (data => {\n            setMovies((movies) => [...movies, data]);\n        })\n    };\n    const getTvList = (id) => {\n        fetchTvSeriesDetail(id)\n        .then(data => {\n            setTvseries((tvseries) => [...tvseries,data]);\n        });\n    };\n\n    const createMovielist = () => {\n        list.movies.map( id => {\n            getMovieItems(id);\n        });\n    };\n\n    const createShowsList = () => {\n        \n        list.shows.map( id => {\n            getTvList(id);\n        });\n    }\n\n   \n    return (\n        <div>\n            {noContent && <h2>No item added in the wishlist!</h2>}\n            <DisplayWishlist movies={movies} mediaType={\"movie\"} loaddata={loaddata} />\n            <DisplayWishlist movies={tvseries} mediaType={\"tv\"} loaddata={loaddata}/>\n        </div>\n    );\n};\n\nexport default ShowWishlist;"]},"metadata":{},"sourceType":"module"}